{"version":3,"sources":["components/HomePageCard/index.js","utils/queries.js","assets/spinner.gif","utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/helpers.js","components/HomepageCardList/index.js","components/Hero/index.js","pages/Home.js","pages/About.js","components/CartItem/index.js","utils/auth.js","components/CartDrawer/index.js","components/CartDrawerBackdrop/index.js","components/Cart/index.js","components/AddToCart/index.js","components/ProductItemDetail/index.js","pages/Detail.js","pages/NoMatch.js","utils/mutations.js","components/Login/index.js","assets/rsvp-side-img.png","pages/Signup.js","assets/logo.png","components/Nav/index.js","components/Footer/index.js","pages/OrderHistory.js","pages/Success.js","components/ProductCard/index.js","components/CameraList/index.js","pages/Cameras.js","components/LensList/index.js","pages/Lenses.js","App.js","reportWebVitals.js","index.js"],"names":["HomePageCameraCard","item","image","brand","model","resolution","description","_id","className","id","style","width","to","alt","justifyContent","variant","src","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_USER","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_DAYS","TOGGLE_CART","reducer","state","action","type","products","cartOpen","cart","product","newState","filter","length","map","reserveDays","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","currentProduct","useReducer","dispatch","console","log","useStoreContext","useContext","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","autoIncrement","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","clear","oncomplete","close","HomePageCardList","useQuery","loading","data","useEffect","forEach","then","cameras","slice","HomePageCard","price","spinner","Hero","role","Home","About","CartItem","onClick","removeFromCart","flexGrow","alignItems","placeholder","onChange","target","parseInt","marginLeft","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","CartDrawer","useState","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","marginBottom","toggleCart","marginTop","startDateId","endDateId","onDatesChange","Intl","DateTimeFormat","year","month","day","format","onFocusChange","startDatePlaceholderText","endDatePlaceholderText","numberOfMonths","htmlFor","required","name","selected","disabled","hidden","calculateTotal","Auth","loggedIn","submitCheckout","CartDrawerBackdrop","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","productIds","variables","i","push","a","getCart","res","redirectToCheckout","sessionId","checkout","session","drawerClasses","total","sum","toFixed","itemNum","calculateItemNum","size","AddToCart","input","useParams","itemInCart","find","cartItem","p","ProductItemDetail","setCurrentProduct","lensCompatibility","quantity","Detail","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","Signup","addUser","firstName","lastName","phoneNumber","rsvp","Nav","menuOpen","setMenuOpen","toggleMenu","body","document","getElementById","classList","toggle","showNavLinks","exact","activeClassName","showNavAuth","href","logout","showNavLinksMobile","showNavAuthMobile","NavHamburger","fill","NavBar","backgroundColor","position","top","zIndex","logo","NavMobile","Footer","rel","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","reservationDate","projectType","index","Success","addOrder","splice","toString","setTimeout","saveOrder","ProductCard","CameraList","item_type","Cameras","LensList","lenses","Lenses","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0b0ad4a4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePageCameraCard(item) {\n\n  const {\n    image,\n    brand,\n    model,\n    resolution,\n    description,\n    _id,\n  } = item;\n\n  return (\n\n\n    // <div className=\" cameraCard \" >\n        <div className=\" homepageCard\" id={_id}>\n          <div className=\"container\" style={{ width: '25rem' }}>\n            <Link to={`/cameras/${_id}`}>\n            <h4 className=\"my-2 homepageProductName\">{brand + \" \" + model}</h4>\n\n              <img alt={model}  justifyContent=\"center\" style={{ width: '22rem' }} variant=\"top\" src={`/images/${image}`} />\n            </Link>\n          </div>\n          <div className=\"container\">\n              <h6>Resolution: </h6>{resolution}\n              <h6>Specs: </h6>{description}\n          </div>\n        </div>\n  );\n}\n\nexport default HomePageCameraCard;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n{\n    products{\n      _id\n      item_type\n      model\n      brand\n      resolution\n      Compatibility\n      image\n      reserveDays\n      price\n      quantity\n      description\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      email\n      phoneNumber\n      mailList\n      orders {\n        _id\n        purchaseDate\n        reservationDate\n        projectType\n        products {\n          _id\n          brand\n          model\n          reserveDays\n          price\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_DAYS = 'UPDATE_CART_DAYS';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';\n","import {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_DAYS,\n  CLEAR_CART,\n  TOGGLE_CART,\n  ADD_MULTIPLE_TO_CART\n} from \"./actions\";\n\nimport { useReducer } from 'react';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return{\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case UPDATE_CART_DAYS:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.reserveDays = action.reserveDays;\n          }\n          return product;\n        })\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n      ...state,\n      cartOpen: !state.cartOpen\n      };\n\n    // if it's none of these actions, do not update state at all and keep things the same!\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers';\n\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    currentProduct: \"\",\n    cart: [],\n    cartOpen: false\n  });\n  // use this to confirm it works!\n  console.log(state);\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","export function idbPromise(storeName, method, object){\n  return new Promise((resolve, reject) => {\n    // open connection to the database `ATX-Movie-Gear` with the version of 1\n    const request = window.indexedDB.open('ATX-Movie-Gear', 1);\n\n    // create variables to hold reference to the database, transaction (tx), and object store\n    let db, tx, store;\n\n    // if version has changed (or if this is the first time using the database), run this method and create the three object stores \n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n      db.createObjectStore('reservationDate', {autoIncrement: true});\n      db.createObjectStore('projectType', {autoIncrement: true});\n    };\n\n    // handle any errors with connecting\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    // on database open success\n    request.onsuccess = function(e) {\n      // save a reference of the database to the `db` variable\n      db = request.result;\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n      tx = db.transaction(storeName, 'readwrite');\n      // save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      // if there's any errors, let us know\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        case 'deleteData':\n          store.clear();\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      // when the transaction is complete, close the connection\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n\nexport function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport HomePageCard from '../HomePageCard';\n\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction HomePageCardList() {\n  const [state, dispatch] = useStoreContext();\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data){\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product)=> {\n        idbPromise('products', \"put\", product);\n      });\n    }else if (!loading){\n      // since we're offline, get all of the data from the `products` store\n      idbPromise('products', 'get').then((products) => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterproducts() {\n    return state.products;\n  }\n    return(\n        <div className=\"homepageCardView\">\n    <div className=\"mx-2 my-4\">\n      <h2 className=\"homepageFeatured my-3 mx-3\" id=\"featured\">Shop New Arrivals</h2>\n      {state.cameras.length ? (\n        <div className=\"cardList flex-column\">\n          {filterproducts().slice(6, -5).map((product) => (\n            <HomePageCard\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              brand={product.brand}\n              model={product.model}\n              resolution={product.resolution}\n              price={product.price}\n              reserveDays={product.reserveDays}\n              description={product.description}\n            />\n          ))}\n        </div>\n      ) : (null\n\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n\n        </div>\n    )\n}\n\nexport default HomePageCardList;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BsArrowRight } from \"react-icons/bs\";\n\nfunction Hero() {\n\n  return (\n    <div className=\"hero-image\">\n      <div className=\"container hero-text\">\n        <Link to=\"components/HomepageCardList\">\n        <h2>\n        New camera arrivals\n        </h2>\n        </Link>\n\n        <p>\n        Get the cinema look with great cinema cameras &mdash; at affordable prices!\n        </p>\n          <Link to=\"/products\">\n            Learn more\n            <span role=\"img\" aria-label=\"arrow\">\n              <BsArrowRight />\n            </span>\n          </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\nimport HomePageCardList from \"../components/HomepageCardList\";\nimport Hero from \"../components/Hero\";\n\nconst Home = () => {\n  return (\n    <>\n      <Hero />\n      <div className=\"text-block introText container\">\n        <h2>Who we are</h2>\n        <p>\n          Austin Movie Gear is a locally owned and operated rental house supporting the filmmakers of Austin, TX. We offer the best prices in town plus honest service.\n        </p>\n      </div>\n      <div className=\"container\">\n        <HomePageCardList />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <>\n      <div className=\"hero-image-small\">\n      </div>\n      <div className=\"text-block text-block-left\">\n        <h2>About Austin Movie Gear</h2>\n        <p>\n          Austin Movie Gear, started in 2013, is a locally owned and operated business dedicated to providing low prices and great service to Austin filmmakers. We think you should be able to try out gear before you rent it, so we offer free demos of our gear.\n        </p>\n        <p>\n          Through our low prices and multi-day discounts — a weekend is one day — we make great equipment available for almost any budget production.\n\n          We serve a dynamic community of talented filmmakers.\n        </p>\n        <h6>\n        Hours \n        </h6>\n        <p>\n        Mon-Fri 10 AM to 4 PM, Sat-Sun 11 AM to 3 PM\n        Other times by appointment only\n        </p>\n\n        <h6>\n          Discounts\n        </h6>\n        <p>\n          Weekends (Friday Afternoon Pickup - Monday AM Return) are 1x the daily rate!\n        </p>\n        <p>\n          2 Days are 1.75x the daily rate\n          <br></br>\n          3 days are 2x the daily rate\n          <br></br>\n          5 days are 2.5x the daily rate\n          <br></br>\n          7 Days are 3x the daily rate\n          <br></br>\n          30 Days are 8.75x the daily rate\n          </p>\n          <p>\n          10% discount for non-profit organizations\n          <br></br>\n          10% discount for Austin School of Film\n          <br></br>\n          10% discount for teachers\n          <br></br>\n          15% discount for students, for student productions only\n        </p>\n\n        <h6>\n        Order Extensions\n        </h6>\n        <p>\n          If, during a rental, you need to extend your order beyond your order's original rental dates, we will accommodate you if the equipment is available.\n        </p>\n        <p>\n          1st extension day is the full day rate\n          <br></br>\n          Each additional day is 50% the day rate\n        </p>\n        \n      </div>\n    </>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_DAYS } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    })\n    idbPromise('cart', 'delete', { ...item });\n  };\n\n  const onChange = (e) =>{\n    const value = e.target.value;\n\n    if(value === '0'){\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_DAYS,\n        _id: item._id,\n        reserveDays: parseInt(value)\n      });\n\n      idbPromise('cart', 'put', { ...item, reserveDays: parseInt(value) });\n    }\n  };\n\n  return (\n    <div className=\"flex-row\">\n      <div className=\"flex-column\">\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n        <div className=\"py-1\">\n          <p className=\"cart-remove\" onClick={() => removeFromCart(item)}>Remove</p>\n        </div>\n      </div>\n      <div className=\"flex-column\" style={{flexGrow:\"1\"}}>\n        <h4>{item.brand} {item.model}</h4>\n        <div className=\"cart-price\">\n          <h5>${item.price}</h5>\n          <p> / day</p>\n        </div>\n        <div className=\"flex-row\" style={{alignItems: \"center\"}}>\n          <p>Quantity </p>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.reserveDays}\n            onChange={onChange}\n            style={{marginLeft: \"8px\", width: \"100%\"}}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport CartItem from '../CartItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport Auth from '../../utils/auth';\nimport { BsXLg } from \"react-icons/bs\";\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction CartDrawer(props) {\n\n  const [state]= useStoreContext();\n\n  // For the date picker\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [focusedInput, setFocusedInput] = useState();\n\n  return (\n    <div className=\"cart-container\">\n    <div>\n      <div className=\"flex-row space-between\" style={{marginBottom: \"24px\"}}>\n        <h2>Shopping Cart</h2>\n        <div className=\"close\" onClick={props.toggleCart}>\n          <BsXLg />\n        </div>\n      </div>\n    \n      {state.cart.length ?(\n        <div>\n          {state.cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row\" style={{marginTop: \"16px\"}}>\n            <div className=\"flex-column\">\n              <h6>Pickup & dropoff dates</h6>\n              <DateRangePicker\n                startDate={startDate}\n                startDateId=\"start-date\" \n                endDate={endDate} \n                endDateId=\"end-date\" \n                onDatesChange={({ startDate, endDate }) => {\n                  setStartDate(startDate);\n                  setEndDate(endDate);\n                  idbPromise('reservationDate', \"put\",\n                  `PickUp: ${new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit'}).format(startDate)}`+ \n                  ` DropOff: ${new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit'}).format(endDate)}`)\n                }}\n                \n                focusedInput={focusedInput}\n                onFocusChange={(focusedInput) => setFocusedInput(focusedInput)}\n                startDatePlaceholderText=\"Pickup date\"\n                endDatePlaceholderText=\"Dropoff date\"\n                numberOfMonths= {1}\n              />\n\n            </div>\n          </div>\n\n          <div className=\"flex-column\" style={{marginTop: \"24px\"}}>\n\n            <label htmlFor=\"project\">\n              <h6>Project type</h6>\n            </label>\n            <select required name=\"project\" id=\"project\"\n              onChange={\n                (e)=>idbPromise('projectType', \"put\", e.target.value)\n              }\n            >\n              <option value=\"\" selected disabled hidden>Choose a project</option>\n              <option value=\"documentary\">Documentary</option>\n              <option value=\"narrative-film\">Narrative film</option>\n              <option value=\"student-film\">Student film</option>\n              <option value=\"music-video\">Music video</option>\n              <option value=\"wedding\">Wedding</option>\n              <option value=\"non-profit\">Non-profit</option>\n              <option value=\"broadcast\">Broadcast</option>\n              <option value=\"online-for-profit\">Online for profit</option>\n              <option value=\"internal\">Internal</option>\n              <option value=\"video-game\">Video game</option>\n              <option value=\"social-media-only\">Social media only</option>\n            </select>\n          </div>\n\n          <div className=\"flex-column space-between\" style={{marginTop: \"40px\"}}>\n            <div className=\"flex-row space-between\" style={{marginBottom: \"24px\"}}>\n              <h5>Total</h5>\n              <h3> ${props.calculateTotal}</h3>\n            </div>\n          \n            {\n              Auth.loggedIn() ?\n                <button onClick={props.submitCheckout}>\n                  Confirm reservation\n                </button>\n                :\n                <span>(log in to check out)</span>\n            }\n          </div>\n        </div>\n      ):(\n        <h6>\n          You haven't added anything to your cart yet!\n        </h6>\n      )}\n    </div>\n    </div>\n  );\n}\n\nexport default CartDrawer;\n","import React from \"react\";\n\nfunction CartDrawerBackdrop(props) {\n  return (\n    <div className=\"cart-backdrop\" onClick={props.toggleCart} />\n  )\n}\n\nexport default CartDrawerBackdrop;\n","import React, { useEffect } from 'react';\nimport CartDrawer from '../CartDrawer';\nimport CartDrawerBackdrop from '../CartDrawerBackdrop';\nimport { useLazyQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState'\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART} from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch]= useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(()=>{\n    async function getCart(){\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart]});\n    };\n\n    if(!state.cart.length){\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart(){\n    dispatch({ type: TOGGLE_CART});\n  }\n\n  // Calculate number of items in cart to display in the bubble\n  function calculateItemNum() {\n    // let itemNum = state.cart.length;\n    let itemNum = 0;\n    state.cart.forEach(item => {\n      itemNum += item.reserveDays;\n    });\n    return (\n      <p>\n        {itemNum}\n      </p>\n    )\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.reserveDays;\n    });\n    return sum.toFixed(2);\n  }\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session })\n      })\n    }\n  }, [data]);\n\n  function submitCheckout(){\n    const productIds = [];\n\n    getCheckout({\n      variables: { products: productIds }\n    });\n\n    state.cart.forEach((item)=> {\n      for(let i = 0; i< item.reserveDays; i++){\n        productIds.push(item._id);\n      }\n    });\n  }\n\n  let drawerClasses=\"cart\";\n  let total = calculateTotal();\n\n  if (!state.cartOpen) {\n    return (\n      <>\n      <div className={drawerClasses}>\n          <CartDrawer \n          toggleCart={toggleCart} \n          calculateTotal={total}\n          submitCheckout={submitCheckout}\n          />\n        </div>\n      <div>\n        <div className=\"cart-item-num\">\n          {calculateItemNum()}\n        </div>\n        <div className=\"cart-closed mx-3\" onClick={toggleCart}>\n          <span role=\"img\" aria-label=\"shopping cart\">\n            <AiOutlineShoppingCart size={30}/>\n          </span>\n        </div>\n      </div>\n      </>\n    );\n  } else {\n    drawerClasses=\"cart open\";\n  }\n\n  return (\n    <>\n    <div className={drawerClasses}>\n      <CartDrawer \n      toggleCart={toggleCart} \n      calculateTotal={total}\n      submitCheckout={submitCheckout}\n      />\n    </div>\n    <CartDrawerBackdrop \n      toggleCart={toggleCart} \n    />\n    </>\n  );\n};\n\nexport default Cart;","import React from \"react\";\nimport { useParams } from 'react-router-dom';\nimport spinner from '../../assets/spinner.gif';\nimport Cart from \"../Cart\";\nimport { useQuery } from '@apollo/client';\nimport {QUERY_PRODUCTS} from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_DAYS,\n  ADD_TO_CART,\n} from \"../../utils/actions\";\n\nfunction AddToCart(input) {\n    const {\n        currentProduct\n    } = input\n\n    const { id } = useParams();\n    const { loading } = useQuery(QUERY_PRODUCTS);\n\n    const addToCart = () => {\n        // find the cart item with the matching id\n        const itemInCart = cart.find((cartItem)=> cartItem._id === id);\n\n        //if there was a match, call UPDATE with a new purchase quantity\n        if(itemInCart){\n          dispatch({\n            type: UPDATE_CART_DAYS,\n            _id: id,\n            reserveDays: parseInt(itemInCart.reserveDays) + 1\n          });\n        }else{\n          dispatch({\n            type: ADD_TO_CART,\n            product: { ...currentProduct, reserveDays: 1 }\n          });\n        }\n      };\n\n    const [state, dispatch] = useStoreContext();\n\n    const { cart } = state;\n\n    const removeFromCart = () => {\n        dispatch({\n          type: REMOVE_FROM_CART,\n          _id: currentProduct._id\n        });\n      };\n    return(\n        <div>\n        <p>\n            <button className=\"my-2\" onClick={addToCart}>Make a Reservation</button>\n            <br />\n            <button className=\"my-2\"\n                disabled={!cart.find(p => p._id === currentProduct._id)}\n                onClick={removeFromCart}\n            >\n\n                Remove from Cart\n            </button>\n      </p>\n\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n              <Cart/>\n    </div>\n\n    )\n}\n\nexport default AddToCart;","\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport AddToCart from '../AddToCart';\n\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS\n} from \"../../utils/actions\";\n\nfunction ProductItemDetail(item) {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({\n  });\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products } = state;\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }else if(data){\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n    }\n  }, [products, data, loading, dispatch,  id]);\n\n  return (\n     <>\n       {currentProduct ? (\n        <div className=\"my-3\">\n         <h1 className=\"productTitle\">{currentProduct.brand + \" \" + currentProduct.model}</h1>\n           <Link to=\"/products\">← Back to products</Link>\n\n             <div className=\"detailWrapper\">\n                <section className=\"flex-row\">\n\n          {/* Image Column */}\n                  <div className=\"flex-column productImage mx-4 px-4\">\n                    <img src={`/images/${currentProduct.image}`} alt=\"product\"/>\n                  </div>\n\n          {/* Description Column */}\n                  <div className=\"flex-column productDescription mx-4 px-4\">\n\n          {/* title and price  */}\n                    <h2 className=\"productDescriptionHeading\">\n                      {currentProduct.brand + \" \" + currentProduct.model}</h2>\n                        <div>\n                        <h3>${currentProduct.price}/day</h3>\n                        </div>\n\n          {/* Specs List */}\n                    <section className=\"detailsText\">\n                      <h4>Specs</h4>\n                          <ul className=\"specs\">\n\n                            <li className=\"my-2\">\n                              <div className=\"listTitle\">Resolution: </div>\n                              <div className=\"listElement\">{currentProduct.resolution}</div>\n                            </li>\n\n                            <li className=\"my-2\">\n                              <div className=\"listTitle\">Lens Compatibility: </div>\n                              <div className=\"listElement\">{currentProduct.lensCompatibility}</div>\n                            </li>\n\n\n                            <li className=\"my-2\">\n                              <div className=\"listTitle\">About: </div>\n                              <div className=\"listElement\">{currentProduct.description}\n                              </div>\n                            </li>\n\n                            <li className=\"my-2\">\n                              <div className=\"listTitle\">In Stock: </div>\n                              <div className=\"listElement\">{currentProduct.quantity}</div>\n\n                            </li>\n                        </ul>\n                        <AddToCart currentProduct={currentProduct} />\n                      </section>\n                  </div>\n\n        {/* Add to Cart component */}\n                  <div className=\"flex-column reservationAndCart mx-1 px-1\">\n\n                  </div>\n\n               </section>\n            </div>\n          </div>\n      ) : null}\n     </>\n  )\n}\n\nexport default ProductItemDetail;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport ProductItemDetail from '../components/ProductItemDetail';\n\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\n\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { UPDATE_PRODUCTS\n} from \"../utils/actions\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({\n});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products } = state;\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }else if(data){\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach((product) =>{\n        idbPromise('products', 'put', product);\n      });\n    }\n  }, [products, data, loading, dispatch,  id]);\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container space-between\">\n          <ProductItemDetail />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </>\n  );\n}\n\nexport default Detail;","import React from \"react\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!, $reservationDate: String!, $projectType: String!) {\n    addOrder(products: $products, reservationDate: $reservationDate, projectType: $projectType) {\n      purchaseDate\n      reservationDate\n      projectType\n      products {\n        _id\n        brand\n        model\n        price\n        quantity\n        image\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n    $phoneNumber: String\n    $mailList: Boolean\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n      phoneNumber: $phoneNumber\n      mailList: $mailList\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction Login(){\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-4\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2 className=\" my-2\">Login</h2>\n      <form onSubmit={handleFormSubmit} className=\"my-4\">\n        <div className=\" loginInputDiv my-2\">\n          <label htmlFor=\"email\">Email address: </label>\n          <br />\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"loginInputDiv my-2\">\n          <label htmlFor=\"pwd\">Password:</label><br />\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"login-btn \">\n          <button className=\"\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/rsvp-side-img.b755e84c.png\";","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport rsvp from '../assets/rsvp-side-img.png';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n        phoneNumber:formState.phoneNumber\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n    <div className=\"container my-4 signupHeaderWrapper\">\n      <Link to=\"/login\" >← Go to Login</Link>\n      <h2 className=\" signUpTitle my-2\">Signup</h2>\n    </div>\n\n    <div className=\"container signupWrapper my-4\">\n    <img className=\"container rsvp-image mx-3\" src={rsvp} alt=\"rsvp with us\"></img>\n      <form className=\" mx-4\" onSubmit={handleFormSubmit}>\n\n        <div className=\"  my-2\">\n          <label htmlFor=\"firstName\">First Name: </label>\n          <br />\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"  my-2\">\n          <label htmlFor=\"lastName\">Last Name: </label> <br />\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"  my-2\">\n          <label htmlFor=\"email\">Email: </label> <br />\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"  my-2\">\n          <label htmlFor=\"pwd\">Password: </label> <br />\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"  my-2\">\n          <label htmlFor=\"phoneNumber\">Phone Number: </label> <br />\n          <input\n            placeholder=\"000-000-0000\"\n            name=\"phoneNumber\"\n            type=\"phoneNumber\"\n            id=\"phoneNumber\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","export default __webpack_public_path__ + \"static/media/logo.5266a845.png\";","import React, { useState } from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport logo from \"../../assets/logo.png\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\n\nfunction Nav() {\n\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  function toggleMenu() {\n    const body = document.getElementById(\"body\");\n    setMenuOpen(!menuOpen); // Toggle menu true or false\n\n    body.classList.toggle(\"fixed-body\"); // Add class to fix scrolling on body\n  }\n\n  // Show the links that don't need authentication\n  function showNavLinks() {\n    return (\n      // If menu is open, add flex-column class. Otherwise add flex-row\n      <ul className={`${menuOpen ? \"flex-column\" : \"flex-row\"}`}>\n        <li className=\"mx-3\">\n          <NavLink exact to=\"/\" activeClassName=\"active\" >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"mx-3\">\n          <NavLink to=\"/cameras\" activeClassName=\"active\" >\n            Cameras\n          </NavLink>\n        </li>\n        <li className=\"mx-3\">\n          <NavLink to=\"/lenses\" activeClassName=\"active\" >\n            Lenses\n          </NavLink>\n        </li>\n        <li className=\"mx-3\">\n          <NavLink to=\"/about\" activeClassName=\"active\" >\n            About\n          </NavLink>\n        </li>\n      </ul>\n    )\n  }\n\n  // Show links that require authentication\n  function showNavAuth() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className={`${menuOpen ? \"flex-column\" : \"flex-row\"}`}>\n          <li className=\"mx-3\">\n            <NavLink to=\"/orderHistory\" activeClassName=\"active\" >\n              Order History\n            </NavLink>\n          </li>\n          <li className=\"mx-3\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={\n              function () {\n                toggleMenu();\n                Auth.logout()\n              } \n              }>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className={`${menuOpen ? \"flex-column\" : \"flex-row\"}`}>\n          <li className=\"mx-3\">\n            <Link to=\"/signup\" >\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-3\">\n            <Link to=\"/login\" >\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  // Show the links that don't need authentication\n  function showNavLinksMobile() {\n    return (\n      // If menu is open, add flex-column class. Otherwise add flex-row\n      <ul className={`${menuOpen ? \"flex-column\" : \"flex-row\"}`}>\n        <li className=\"mx-3\">\n          <NavLink exact to=\"/\" activeClassName=\"active\" onClick={toggleMenu} >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"mx-3\">\n          <NavLink to=\"/cameras\" activeClassName=\"active\" onClick={toggleMenu} >\n            Cameras\n          </NavLink>\n        </li>\n        <li className=\"mx-3\">\n          <NavLink to=\"/about\" activeClassName=\"active\" onClick={toggleMenu} >\n            About\n          </NavLink>\n        </li>\n      </ul>\n    )\n  }\n\n  // Show links that require authentication\n  function showNavAuthMobile() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className={`${menuOpen ? \"flex-column\" : \"flex-row\"}`}>\n          <li className=\"mx-3\">\n            <NavLink to=\"/orderHistory\" activeClassName=\"active\" onClick={toggleMenu} >\n              Order History\n            </NavLink>\n          </li>\n          <li className=\"mx-3\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={\n              function () {\n                toggleMenu();\n                Auth.logout()\n              } \n              }>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className={`${menuOpen ? \"flex-column\" : \"flex-row\"}`}>\n          <li className=\"mx-3\">\n            <Link to=\"/signup\" onClick={toggleMenu} >\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-3\">\n            <Link to=\"/login\" onClick={toggleMenu} >\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  // Hamburger icon\n  const NavHamburger = ({ menuOpen }) => (\n   <AiOutlineMenu className=\"nav-hamburger\" style={{fill:\"#ffffff\"}} size={26}/>\n  );\n\n  // Navbar that will be shown on desktop\n  // Hide the hamburger on desktop\n  const NavBar = ({ menuOpen, setMenuOpen }) => {\n    return (\n      <nav className=\"flex-row px-2 hidden\">\n         <button style={{backgroundColor:\"transparent\", position:\"absolute\", top:\"0\", zIndex:\"999\"}} type=\"button\" aria-label=\"Toggle mobile menu\" onClick={toggleMenu} className=\"hidden-mobile\"><NavHamburger menuOpen={menuOpen} /></button>\n        <NavLink to=\"/\" className=\"flex-row hidden-mobile center-logo\">\n          <img className=\"logo mx-3\" src={logo} alt=\"logo\"></img>\n        </NavLink>\n        <div className=\"flex-row space-between display-none\">\n            {showNavLinks()}\n          <div className=\"flex-row nav-auth-links\">\n            {showNavAuth()}\n          </div>\n        </div>\n      </nav>\n    )\n  }\n\n  // Mobile menu\n  const NavMobile = ({ menuOpen, setMenuOpen }) => {\n    return (\n        <div className=\"mobile-menu\">\n          <div className=\"flex-column\">\n          {showNavLinksMobile()}\n          </div>\n\n        {showNavAuthMobile()}\n        </div>\n    )\n  }\n\n  return (\n    <header>\n     <NavBar menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n     {menuOpen &&\n      <NavMobile />\n     }\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BsYoutube, BsInstagram } from \"react-icons/bs\";\n\nfunction Footer() {\n\n  return (\n    <footer className=\"px-4\">\n      <div className=\"flex-column container footerWrapper\">\n        {/* Top row info*/}\n        <div className=\"flex-row space-between footer-row footer-row-top\">\n          <div>\n            <h5>\n              Austin Movie Gear\n            </h5>\n            <p>\n              8711 Burnet Road F-73\n              Austin,Tx 78757\n            </p>\n            <p>\n              512.788.5462\n            </p>\n          </div>\n          <div>\n            <h6>\n              Hours\n            </h6>\n            <p>\n            Mon-Fri 10 AM to 4 PM,\n            Sat-Sun 11 AM to 3 PM\n            </p>\n            <p>\n            Other times by appointment only\n            </p>\n          </div>\n          <div>\n            <form className=\"flex-column\">\n              {/* <div> */}\n                <label htmlFor=\"mailing-list\">\n                <h6>\n                Sign up for our mailing list\n                </h6>\n              </label>\n              {/* </div> */}\n              <div>\n              <input type=\"text\" id=\"mailing-list\" name=\"mailing-list\" placeholder=\"Email address\"></input>\n              <input className=\"mailing-list-btn\" type=\"submit\" value=\"Sign up\"></input>\n              </div>\n            </form>\n          </div>\n        </div>\n\n        {/* Bottom row info*/}\n        <div className=\"flex-row footer-row space-between\">\n          <p>\n          Copyright © 2021 Austin Movie Gear\n          </p>\n          <div className=\"flex-row\">\n            <div className=\"social-link social-link-circle\">\n              <a href=\"https://www.instagram.com/austinmoviegear\" target=\"_blank\" rel=\"noreferrer noopener\">\n                <BsInstagram size={18}/>\n              </a>\n            </div>\n            <div className=\"social-link social-link-circle\">\n              <a href=\"https://www.youtube.com/channel/UC-Z0emm3kROvxj7byrIvDCw\" target=\"_blank\" rel=\"noreferrer noopener\">\n                <BsYoutube size={20}/>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  Date: {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <h4>\n                  Date of Pick Up/drop off:\n                  <br/>\n                  {order.reservationDate}\n                </h4>\n                <h4>\n                  project Type: {order.projectType}\n                </h4>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, brand, model, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={model} src={`/images/${image}`} />\n                        <p>{brand+ \" \" + model}</p>\n                      </Link>\n                      <div>\n                        <span>${price} per day</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get')\n      const products = cart.map(item => item._id);\n      let reservationDate = await idbPromise('reservationDate', 'get')\n      let projectType = await idbPromise('projectType', 'get');\n\n      console.log(reservationDate[0])\n\n      if (products.length) {\n        const { data } = \n        await addOrder(\n          { variables: {\n              products,\n              reservationDate: reservationDate.splice(-1).toString(),\n              projectType: projectType.splice(-1).toString() \n            }\n          });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      idbPromise( 'reservationDate','deleteData');\n      idbPromise( 'projectType','deleteData');\n\n      setTimeout(()=>{\n        window.location.assign('/');\n      }, 9000);\n    }\n    saveOrder();\n  }, [addOrder]);\n  return (\n    <div>\n        <h1>Success!</h1>\n        <h2>\n          Thank you for your purchase!\n        </h2>\n        <h2>\n          You will now be redirected to the homepage\n        </h2>\n    </div>\n  );\n};\n\nexport default Success;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProductCard(item) {\n\n  const {\n    image,\n    brand,\n    model,\n    resolution,\n    description,\n    _id,\n    price\n  } = item;\n\n  return (\n\n    <div className=\" productCard \">\n    <div id={_id}>\n        <div className=\"card\" style={{ width: '18rem' }}>\n          <div className=\"container imgContainer\">\n            <img alt={model} className=\" my-2\" justifyContent=\"center\" style={{ width: '14rem' }} variant=\"top\" src={`/images/${image}`} />\n          </div>\n          <div>\n            <h6 className=\"my-2\">{brand + \" \" + model}</h6>\n            <div className=\"my-2 mx-4\">\n              <p>{resolution}</p>\n              {description}\n            </div>\n            <button className=\"my-2\">\n            <Link to={`/products/${_id}`}>\n              See Product Details</Link>\n            </button>\n            <footer className=\"cardFooter\" id=\"price\">\n              <div className=\"cardFooter hardText\">Rentals beginning at</div>\n              <div className=\"rentalPrice\">${price}/day</div>\n            </footer>\n          </div>\n        </div>\n      </div>\n  </div>\n  );\n}\n\nexport default ProductCard;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ProductCard from '../ProductCard';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction CameraList() {\n  const [state, dispatch] = useStoreContext();\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data){\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product)=> {\n        idbPromise('products', \"put\", product);\n      });\n    }else if (!loading){\n      // since we're offline, get all of the data from the `products` store\n      idbPromise('products', 'get').then((products) => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function products() {\n    let cameras = [];\n    for (let i=0; state.products.length > i; i++){\n      if(state.products[i].item_type === \"Camera\"){\n        cameras.push(state.products[i])\n      }\n    } \n    return cameras\n  }\n\n  console.log(products())\n  return (\n    <div className=\"m-2\">\n      {state.products.length ? (\n        <div className=\" cardList\">\n          {products().map((product) =>\n            (\n              <ProductCard\n                key={product._id}\n                _id={product._id}\n                image={product.image}\n                brand={product.brand}\n                model={product.model}\n                resolution={product.resolution}\n                price={product.price}\n                reserveDays={product.reserveDays}\n                description={product.description}\n              />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any cameras yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default CameraList;","import React from 'react';\nimport CameraList from '../components/CameraList';\n\n\nfunction Cameras(){\n\n  return (\n    <div className=\" my-1\">\n      <h1 className=\"mx-4 my-4\">Cameras</h1>\n      <div>\n        <div>\n          <CameraList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cameras;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ProductCard from '../ProductCard';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction LensList() {\n  const [state, dispatch] = useStoreContext();\n  const {loading, data} = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data){\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product)=> {\n        idbPromise('products', \"put\", product);\n      });\n    }else if (!loading){\n      // since we're offline, get all of the data from the `products` store\n      idbPromise('products', 'get').then((products) => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function products() {\n    let lenses = [];\n    for (let i=0; state.products.length > i; i++){\n      if(state.products[i].item_type === \"Lens\"){\n        lenses.push(state.products[i])\n      }\n    } \n    return lenses\n  }\n\n  console.log(products())\n  return (\n    <div className=\"m-2\">\n      {state.products.length ? (\n        <div className=\" cardList\">\n          {products().map((product) =>\n            (\n              <ProductCard\n                key={product._id}\n                _id={product._id}\n                image={product.image}\n                brand={product.brand}\n                model={product.model}\n                resolution={product.resolution}\n                price={product.price}\n                reserveDays={product.reserveDays}\n                description={product.description}\n              />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any lenses yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default LensList;","import React from 'react';\nimport LensList from '../components/LensList';\n\n\nfunction Lenses(){\n\n  return (\n    <div className=\" my-1\">\n      <h1 className=\"mx-4 my-4\">Lenses</h1>\n      <div>\n        <div>\n          <LensList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Lenses;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './components/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Cart from \"./components/Cart\";\nimport Footer from './components/Footer';\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport OrderHistory from './pages/OrderHistory';\nimport Success from './pages/Success';\nimport Cameras from './pages/Cameras';\nimport Lenses from './pages/Lenses';\n\nlet httpLink;\n\nif(process.env.NODE_ENV === 'production'){\n  httpLink = createHttpLink({\n    uri: '/graphql'\n  });\n}else{\n  httpLink = createHttpLink({\n    uri: 'http://localhost:3001/graphql'\n  });\n}\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Cart />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/Login\" component={Login} />\n              <Route exact path=\"/Cameras\" component={Cameras} />\n              <Route exact path=\"/Lenses\" component={Lenses} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/Products/:id\" component={Detail} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route component={NoMatch} />\n            </Switch>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}